/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.CovidCentreRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.AuthorizationOrganization;
import Business.Organization.Organization;
import Business.Person.DonorRequest;
import Business.Person.Patient;
import Business.Person.PatientRequest;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author namita
 */
public class ReceiverRequest extends javax.swing.JPanel {

    
    private  EcoSystem system;
    private PatientRequest patientRequest;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private UserAccount userAccount;
    private Network network;
    private JPanel userProcessContainer;
    /**
     * Creates new form ReceiverRequest
     */
    public ReceiverRequest(JPanel userProcessContainer,EcoSystem system, UserAccount userAccount, Network network) {
        initComponents();
         this.system = system;
        this.userAccount = userAccount;
        this.network = network;
        this.userProcessContainer=userProcessContainer;
        
        populateRequestTable();
    }
    
    private void populateRequestTable(){
        DefaultTableModel dtm = (DefaultTableModel) requestTable.getModel();
        
        dtm.setRowCount(0);
        
         for(PatientRequest patientRequest: system.getPatientRequestDirectory().getPrList()){            
            Object row[] = new Object[7];
            row[0]= patientRequest.getPatientID();
            row[1]= patientRequest.getName();
            row[2]= patientRequest.getContact();
            row[3]= patientRequest.getStatus();
            row[4]= patientRequest.getEmailID();
            row[5]= patientRequest.getCovidDiagnosisDate();
            row[6]= patientRequest.getGender();

            dtm.addRow(row);
        }        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        btnApprove = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backJButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        requestTable.setBackground(new java.awt.Color(255, 204, 204));
        requestTable.setForeground(new java.awt.Color(102, 0, 0));
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Patient Name", "Patient Contact", "Status", "Email ID", "Diagnosed Date", "Gender"
            }
        ));
        jScrollPane1.setViewportView(requestTable);

        btnApprove.setBackground(new java.awt.Color(255, 204, 204));
        btnApprove.setFont(new java.awt.Font("Kefa", 1, 14)); // NOI18N
        btnApprove.setForeground(new java.awt.Color(102, 0, 0));
        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        btnReject.setBackground(new java.awt.Color(255, 204, 204));
        btnReject.setFont(new java.awt.Font("Kefa", 1, 14)); // NOI18N
        btnReject.setForeground(new java.awt.Color(102, 0, 0));
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Kefa", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("Receiver Request ");

        backJButton2.setBackground(new java.awt.Color(255, 204, 204));
        backJButton2.setFont(new java.awt.Font("Kefa", 1, 14)); // NOI18N
        backJButton2.setForeground(new java.awt.Color(102, 0, 0));
        backJButton2.setText("<< Back");
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(backJButton2)
                        .addGap(174, 174, 174)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(btnApprove)
                        .addGap(64, 64, 64)
                        .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnApprove, btnReject});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(backJButton2)))
                .addGap(78, 78, 78)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnApprove))
                .addContainerGap(189, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnApprove, btnReject});

    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
        
//        if( !statusText.getText().equals("New Request"))
//            {
//                JOptionPane.showMessageDialog(null, new JLabel(  "<html><h2><I>Request<font color='red'> can not</font> be approved!</I></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
//           
//                
//            //    JOptionPane.showMessageDialog(null,"Can Not Approve the Request!");
//            }
//        
//        else
//        {
        int selectedRow = requestTable.getSelectedRow();
        PatientRequest dr =((PatientRequest) requestTable.getValueAt(selectedRow, 0));
       
        Patient patient = system.getPatientDirectory().addPatient();
        patient.setName(dr.getName());
        patient.setContact(dr.getContact());  
        
        patient.setPatientID(dr.getPatientID()); // UID, receiverID
        patient.setName(dr.getName()); // Name
       
       
        
        patient.setAge(dr.getAge()); // Age
        patient.setGender(dr.getGender()); // gender
        patient.setBloodGroup(dr.getBloodGroup()); // Blood group
        patient.setAddress(dr.getAddress()); // streetAddress
        
        patient.setContact(dr.getContact()); // contact
        patient.setEmailID(dr.getEmailID()); // emailID
        patient.setStatus("Centre Approved"); // status
//        patient.setLabConfirmation(true); //  labConfirmation
//      
        
        for(PatientRequest patientRequest: system.getPatientRequestDirectory().getPrList()){                      
       // System.out.println("req:"+patientRequest.getPatientID()+" "+patient.getPatientID());
            if(patientRequest.getName().equals(patient.getName())){
            patientRequest.setStatus("Centre Approved");
            dB4OUtil.storeSystem(system);
            }
        }



       
        
        WorkRequest request = new LabTestWorkRequest();
        
        request.setPatient(patient);
        request.setRequestDate(new Date());
        request.setAssigned("Authorization Pool");
        request.setSummary("Requested for Plasma Reception");
        request.setStatus("Assigned to Authorization Pool");
        
        request.setUserAccount(userAccount);
       
        Enterprise ent = null;
        Organization org = null;
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise.getEnterpriseType().toString().equals("Authorization")) {
            
                ent = enterprise;
                System.out.println(enterprise);
                break;
            }
        }
        
        
       
        for (Organization organization : ent.getOrganizationDirectory().getOrganizationList()) {
            if(organization instanceof AuthorizationOrganization) {
                org = organization;
                break;
            }
        }
        
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
            System.out.println(org.getName());
            userAccount.getWorkQueue().getWorkRequestList().add(request);
            //user.addUserRequest(request);
            
            dB4OUtil.storeSystem(system);
            populateRequestTable();
            JOptionPane.showMessageDialog(null, new JLabel(  "<html><h2><I>Request<font color='green'> approved</font> successfully!</I></h2></html>"));
           
            //JOptionPane.showMessageDialog(null,"Request Sent Successfully", "Info", JOptionPane.INFORMATION_MESSAGE);
            
        } else {
        
         JOptionPane.showMessageDialog(null, "No organization present", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
        
        
        
        
        
       // statusText.setText("Centre Approved");
        dB4OUtil.storeSystem(system);
        populateRequestTable();
      //  JOptionPane.showMessageDialog(null,"New patient has been added!");
        
       // }
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
         for(PatientRequest patientRequest: system.getPatientRequestDirectory().getPrList()){                      
        
            //if(patientRequest.getName().equals(nameText.getText())){
//            statusText.setText("Rejected");
            patientRequest.setStatus("Rejected");
           // }
    }
        
        dB4OUtil.storeSystem(system);   
        populateRequestTable();
        
         JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Request has been<font color='red'> rejected</font>!</I></h2></html>"));
        
        
    }//GEN-LAST:event_btnRejectActionPerformed

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed
    userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton2;
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
