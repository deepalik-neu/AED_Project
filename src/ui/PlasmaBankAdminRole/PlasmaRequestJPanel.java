/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.PlasmaBankAdminRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.PlasmaBankOrganization;
import Business.Organization.HospitalCoordinatorOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author namita
 */
public class PlasmaRequestJPanel extends javax.swing.JPanel {

    private UserAccount userAccount;
    private PlasmaBankOrganization plasmaorganization;
    private Enterprise enterprise;
    private Network network;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private EcoSystem system;
    private JPanel userProcessContainer;
    /**
     * Creates new form PlasmaRequestJPanel
     */
    public PlasmaRequestJPanel(JPanel userProcessContainer,UserAccount userAccount, PlasmaBankOrganization plasmaorganization, Enterprise enterprise, Network network, EcoSystem system) {
        initComponents();
        this.userAccount = userAccount;
        this.plasmaorganization = plasmaorganization;
        this.enterprise = enterprise;
        this.network = network;
        this.system = system;
        
        
        populatePlasmaRequestTable();
    }
    
     public void populatePlasmaRequestTable(){
        DefaultTableModel model = (DefaultTableModel)tablePlasmaRequest.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : plasmaorganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[9];
            row[0] = request;
          
            row[1] = request.getPatient().getName();
            row[2] = request.getPatient().getPatientID();
            row[3] = request.getPatient().getEmailID();
            row[4] = request.getStatus();
            row[5] = request.getPatient().getContact();
            row[6]=request.getSummary();
            row[7]=request.getPatient().getBloodGroup();
            row[8]=request.getRequestDate();
             
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePlasmaRequest = new javax.swing.JTable();
        btnApproveRequest = new javax.swing.JButton();
        btnRejectRequest = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Kefa", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("Plasma Bank");

        jLabel2.setBackground(new java.awt.Color(255, 204, 204));
        jLabel2.setFont(new java.awt.Font("Kefa", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 0));
        jLabel2.setText("Plasma Requests List");

        tablePlasmaRequest.setBackground(new java.awt.Color(255, 204, 204));
        tablePlasmaRequest.setFont(new java.awt.Font("Kefa", 1, 14)); // NOI18N
        tablePlasmaRequest.setForeground(new java.awt.Color(102, 0, 0));
        tablePlasmaRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Patient ID", "Email ID", "Status", "Contact", "request summary", "Blood Group", "Requested Date"
            }
        ));
        jScrollPane1.setViewportView(tablePlasmaRequest);

        btnApproveRequest.setBackground(new java.awt.Color(255, 204, 204));
        btnApproveRequest.setFont(new java.awt.Font("Kefa", 1, 14)); // NOI18N
        btnApproveRequest.setForeground(new java.awt.Color(102, 0, 0));
        btnApproveRequest.setText("Approve Request");
        btnApproveRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveRequestActionPerformed(evt);
            }
        });

        btnRejectRequest.setBackground(new java.awt.Color(255, 204, 204));
        btnRejectRequest.setFont(new java.awt.Font("Kefa", 1, 14)); // NOI18N
        btnRejectRequest.setForeground(new java.awt.Color(102, 0, 0));
        btnRejectRequest.setText("Reject Request");
        btnRejectRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectRequestActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(255, 204, 204));
        backJButton.setFont(new java.awt.Font("Kefa", 1, 14)); // NOI18N
        backJButton.setForeground(new java.awt.Color(102, 0, 0));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon("/Users/namita/Desktop/Images for AED Project/7.jpeg")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(btnApproveRequest)
                        .addGap(69, 69, 69)
                        .addComponent(btnRejectRequest))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(432, 432, 432))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(35, 35, 35)))
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnApproveRequest, btnRejectRequest});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton)
                        .addGap(53, 53, 53)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(20, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApproveRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRejectRequest))
                .addGap(116, 116, 116))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnApproveRequest, btnRejectRequest});

    }// </editor-fold>//GEN-END:initComponents

    private void btnRejectRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectRequestActionPerformed
        // TODO add your handling code here:
        
          int selectedPatient = tablePlasmaRequest.getSelectedRow();
      
        if (selectedPatient < 0){   
            JOptionPane.showMessageDialog(null, new JLabel(  "<html><h2><I>Please select<font color='red'> a row</font> from the<font color='green'> table!</I></font></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
             return;
        }
         else
        {
          
            WorkRequest request = (WorkRequest)tablePlasmaRequest.getValueAt(selectedPatient, 0);
            if(request.getStatus().equals("Authorized. Passing request to Plasma Bank")){
                request.setStatus("Plasma Donoation Request Rejected");
               JOptionPane.showMessageDialog(null, new JLabel("<html><h2>Work Request is<font color='red'> on hold</font> !</h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
       
            }
            else{
                
               JOptionPane.showMessageDialog(null, new JLabel(  "<html><h2 color='yellow'>Work Request for patient is already in progress!</h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnRejectRequestActionPerformed

    private void btnApproveRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveRequestActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tablePlasmaRequest.getSelectedRow();
        
        if (selectedRow < 0){
         
            JOptionPane.showMessageDialog(null, new JLabel(  "<html><h2 color='red'>Please select a row from the table</h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
            
            return;
        }
        else
        {
            WorkRequest request = (WorkRequest)tablePlasmaRequest.getValueAt(selectedRow, 0);
            if(request.getStatus().equals("Authorized. Passing request to Plasma Bank"))
              
            {
                request.setStatus("PlasmaBank Approved. Passing to Hospital Coordinator");
        
                dB4OUtil.storeSystem(system);
                populatePlasmaRequestTable();
        
                Enterprise ent = null;
                Organization org = null;
        
                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    if (enterprise.getEnterpriseType().toString().equals("Hospital")) {
                            ent = enterprise;
                            break;
                    }
                }
                for (Organization organization : ent.getOrganizationDirectory().getOrganizationList()) {
                    if(organization instanceof HospitalCoordinatorOrganization) {
                        org = organization;
                        break;
                    }
                }
        
                if (org != null) {
                    org.getWorkQueue().getWorkRequestList().add(request);

                    JOptionPane.showMessageDialog(null, new JLabel("<html><h2>Work Request for plasma bank is approved! </h2></html>"), "Success", JOptionPane.INFORMATION_MESSAGE);
                }
                else {
                    JOptionPane.showMessageDialog(null, new JLabel("<html><h2>Sorry, organization not present</h2></html>"), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
                
                 JOptionPane.showMessageDialog(null, new JLabel(  "<html><h2 color='yellow'>Work Request for patient is already in progress!</h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
                
            }
        }
            
     dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_btnApproveRequestActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnApproveRequest;
    private javax.swing.JButton btnRejectRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablePlasmaRequest;
    // End of variables declaration//GEN-END:variables
}
